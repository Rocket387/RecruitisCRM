// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recruitis.Data;

#nullable disable

namespace Recruitis.Migrations
{
    [DbContext(typeof(RecruitisContext))]
    partial class RecruitisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Recruitis.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientID"), 1L, 1);

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<int>("CompanysCompanyID")
                        .HasColumnType("int");

                    b.Property<string>("Email_Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastName");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName1");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<int?>("RisksRiskID")
                        .HasColumnType("int");

                    b.Property<int?>("StatussStatusID")
                        .HasColumnType("int");

                    b.HasKey("ClientID");

                    b.HasIndex("CompanysCompanyID");

                    b.HasIndex("RisksRiskID");

                    b.HasIndex("StatussStatusID");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("Recruitis.Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyID"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyID");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("Recruitis.Models.Risk", b =>
                {
                    b.Property<int>("RiskID")
                        .HasColumnType("int");

                    b.Property<string>("RiskLabel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RiskID");

                    b.ToTable("Risk", (string)null);
                });

            modelBuilder.Entity("Recruitis.Models.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<string>("RiskLabel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusID");

                    b.ToTable("Status", (string)null);
                });

            modelBuilder.Entity("Recruitis.Models.Client", b =>
                {
                    b.HasOne("Recruitis.Models.Company", "Companys")
                        .WithMany("Clients")
                        .HasForeignKey("CompanysCompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Recruitis.Models.Risk", "Risks")
                        .WithMany("Clients")
                        .HasForeignKey("RisksRiskID");

                    b.HasOne("Recruitis.Models.Status", "Statuss")
                        .WithMany("Clients")
                        .HasForeignKey("StatussStatusID");

                    b.Navigation("Companys");

                    b.Navigation("Risks");

                    b.Navigation("Statuss");
                });

            modelBuilder.Entity("Recruitis.Models.Company", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("Recruitis.Models.Risk", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("Recruitis.Models.Status", b =>
                {
                    b.Navigation("Clients");
                });
#pragma warning restore 612, 618
        }
    }
}
